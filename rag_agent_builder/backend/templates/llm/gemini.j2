# Auto-generated Gemini client

import requests
import json

API_KEY    = "{{ config.llm.api_key }}"
MODEL_NAME = "{{ config.llm.model_name }}"

def generate_response(prompt: str) -> str:
    headers = {
        "Content-Type": "application/json"
    }

    body = {
        "contents": [
            {
                "role": "user",
                "parts": [{"text": prompt}]
            }
        ]
    }

    url = f"https://generativelanguage.googleapis.com/v1beta/models/{MODEL_NAME}:generateContent?key={API_KEY}"

    response = requests.post(url, headers=headers, json=body)

    if response.status_code != 200:
        try:
            error_msg = response.json().get("error", {}).get("message", "Unknown error")
        except Exception:
            error_msg = response.text
        raise RuntimeError(f"Gemini API call failed ({response.status_code}): {error_msg}")

    try:
        return response.json()["candidates"][0]["content"]["parts"][0]["text"]
    except Exception:
        raise RuntimeError("Gemini response parsing failed.")
